<?php
declare(strict_types=1);

namespace jasonwynn10\VeinMiner\utils;

use pocketmine\plugin\Plugin;
use function is_string;
use function mb_strtolower;
use function preg_match;
use function str_contains;
use function strlen;

final class NamespacedKey{

	/**
	 * The namespace representing all inbuilt keys.
	 */
	public const MINECRAFT = 'minecraft';
	/**
	 * The namespace representing all keys generated by Bukkit for backwards
	 * compatibility measures.
	 */
	public const POCKETMINE = 'pocketmine';
	//
	private const VALID_NAMESPACE = '/[a-z0-9._-]+/';
	private const VALID_KEY = '/[a-z0-9/._-]+/';
	//
	private string $namespace;

	/**
	 * Create a key in the plugin's namespace.
	 * <p>
	 * Namespaces may only contain lowercase alphanumeric characters, periods,
	 * underscores, and hyphens.
	 * <p>
	 * Keys may only contain lowercase alphanumeric characters, periods,
	 * underscores, hyphens, and forward slashes.
	 *
	 * @param Plugin|string $plugin the plugin to use for the namespace
	 * @param string        $key    the key to create
	 */
	public function __construct(Plugin|string $plugin, private string $key){
		if(is_string($plugin) && preg_match(self::VALID_NAMESPACE, $plugin) === 0){
			$this->namespace = $plugin;
		}
		$this->namespace = mb_strtolower($plugin->getName());

		if(strlen($this->__toString()) > 256)
			throw new \OutOfBoundsException('NamespacedKey must be less than 256 characters');
	}

	public static function fromString(string $key, ?Plugin $defaultNamespace = null) : ?string{
		if(str_contains($key, ":") && $defaultNamespace !== null){
			return $key;
		}
		return $defaultNamespace instanceof Plugin ? $defaultNamespace->getName() . ":" . $key : $key;
	}

	public function getKey() : string{
		return $this->key;
	}

	public function getNamespace() : string{
		return $this->namespace;
	}

	public function __toString() : string{
		return $this->namespace . ":" . $this->key;
	}

	/**
	 * Get a key in the Minecraft namespace.
	 *
	 * @param string $key the key to use
	 *
	 * @return self new key in the Minecraft namespace
	 */
	public static function minecraft(string $key) : self{
		return new self(self::MINECRAFT, $key);
	}

}
